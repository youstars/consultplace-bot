from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from html import escape
from consultplace_bot.api.backend import backend

router = Router(name="order_ai")

@router.callback_query(F.data.startswith("order:tz:generate:"))
async def ai_generate_tz(cb: CallbackQuery):
    order_id = int(cb.data.rsplit(":", 1)[-1])

    tz = await backend.request_tz(order_id, payload={})   # –≤ MVP payload –ø—É—Å—Ç–æ–π
    if tz.startswith("üöß"):
        await cb.message.answer(tz)
        await cb.answer()
        return
    text = f"<b>–ß–µ—Ä–Ω–æ–≤–∏–∫ –¢–ó</b>\n\n{escape(tz)}\n\n–í—Å—ë –≤–µ—Ä–Ω–æ?"

    kb = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton("‚úÖ –í—Å—ë –≤–µ—Ä–Ω–æ", callback_data=f"order:tz:ok:{order_id}"),
        InlineKeyboardButton("‚úèÔ∏è –û–±—Å—É–¥–∏—Ç—å –ø–æ–∑–∂–µ", callback_data="noop")
    ]])
    await cb.message.edit_text(text, reply_markup=kb)
    await cb.answer()

@router.callback_query(F.data.startswith("order:tz:ok:"))
async def ai_estimate(cb: CallbackQuery):
    order_id = int(cb.data.rsplit(":", 1)[-1])

    cost = await backend.estimate_cost(order_id, tz="approved")   # tz –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    text = (
        f"üí∞ <b>–û—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏</b>\n"
        f"–î–∏–∞–ø–∞–∑–æ–Ω: {cost['min_price']:,}‚Äì{cost['max_price']:,} {cost['currency']}\n"
        f"–¢—Ä—É–¥–æ—ë–º–∫–æ—Å—Ç—å: {cost['effort_hours']} —á.\n\n"
        "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –±—é–¥–∂–µ—Ç?"
    )
    kb = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="noop"),
        InlineKeyboardButton("üîô –û–±—Å—É–¥–∏—Ç—å –ø–æ–∑–∂–µ", callback_data="noop")
    ]])
    await cb.message.edit_text(text, reply_markup=kb)
    await cb.answer()