from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from consultplace_bot.api.backend import backend
from consultplace_bot.bot.routers.order_ai import GenTZ

router = Router(name="orders_list")


def _render_table(orders: list) -> str:
    if not orders:
        return "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤."
    lines = ["<b>ID ‚îÇ –°—Ç–∞—Ç—É—Å ‚îÇ –ù–∞–∑–≤–∞–Ω–∏–µ</b>"]
    for o in orders:
        if isinstance(o, dict):
            order_id = o.get("id", "N/A")
            status = o.get("status", "N/A")
            goal = o.get("order_goal", "")[:35]
            lines.append(f"{order_id:>3} ‚îÇ {status:<8} ‚îÇ {goal}")
        else:
            lines.append(f"–û—à–∏–±–∫–∞: –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö: {type(o)}")
    return "\n".join(lines)


def _order_row(o: dict) -> str:
    return f"‚Ä¢ #{o['id']} ‚Äî {o['order_goal']} ‚Äî *{o['status']}*"


def _order_kb(order_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úçÔ∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¢–ó",
                    callback_data=f"gen_tz:{order_id}",
                )
            ]
        ]
    )


@router.message(Command("my_orders"))
async def list_my_orders(msg: Message):
    try:
        data = await backend.list_orders()
    except Exception:
        await msg.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    if not isinstance(data, dict) or "results" not in data:
        await msg.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.")
        return

    orders = data["results"]
    if not orders:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.")
        return

    rows: list[list[InlineKeyboardButton]] = []
    for o in orders:
        order_id = o.get("id")
        goal = o.get("order_goal", "‚Äî")
        status = o.get("status", "‚Äî")
        text = f"#{order_id}: {goal} ({status})"
        # –≤–º–µ—Å—Ç–æ "tz:<id>" —Ç–µ–ø–µ—Ä—å —É–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ GenTZ
        btn = InlineKeyboardButton(
            text=text,
            callback_data=GenTZ(id=order_id).pack()
        )
        rows.append([btn])

    keyboard = InlineKeyboardMarkup(inline_keyboard=rows)
    await msg.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¢–ó:", reply_markup=keyboard)