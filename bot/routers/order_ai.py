from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, Message
from consultplace_bot.api.backend import backend

router = Router(name="order_ai")

# ---------- CALLBACK after /new_order wizard finished ----------
@router.callback_query(F.data.startswith("order:tz:generate:"))
async def ai_generate_tz(cb: CallbackQuery):
    order_id = int(cb.data.split(":")[-1])

    # –≤—ã–∑—ã–≤–∞–µ–º AI
    tz = await backend.request_tz(order_id, payload={})   # –≤ MVP –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ order_id
    text = f"<b>–ß–µ—Ä–Ω–æ–≤–∏–∫ –¢–ó</b>\n\n{tz}\n\n–í—Å—ë –≤–µ—Ä–Ω–æ?"

    kb = InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚úÖ –í—Å—ë –≤–µ—Ä–Ω–æ", callback_data=f"order:tz:ok:{order_id}"),
            InlineKeyboardButton(text="‚úèÔ∏è –û–±—Å—É–¥–∏—Ç—å –ø–æ–∑–∂–µ", callback_data="noop")
        ]]
    )

    await cb.message.edit_text(text, reply_markup=kb)
    await cb.answer()

# ---------- CALLBACK "–í—Å—ë –≤–µ—Ä–Ω–æ" ----------
@router.callback_query(F.data.startswith("order:tz:ok:"))
async def ai_estimate(cb: CallbackQuery):
    order_id = int(cb.data.split(":")[-1])

    # –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –ª—É—á—à–µ –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å tz, –Ω–æ –¥–ª—è MVP –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–Ω–æ–≤—å
    tz = "cached tz"  # —Ç—É—Ç –≤–æ–∑—å–º—ë–º –∏–∑ –ë–î/redis; –æ–ø—É—Å—Ç–∏–º —Ä–∞–¥–∏ –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏

    cost = await backend.estimate_cost(order_id, tz)
    text = (
        f"üí∞ <b>–û—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏</b>\n"
        f"–î–∏–∞–ø–∞–∑–æ–Ω: {cost['min_price']:,}‚Äì{cost['max_price']:,} {cost['currency']}\n"
        f"–¢—Ä—É–¥–æ—ë–º–∫–æ—Å—Ç—å: {cost['effort_hours']} —á.\n\n"
        "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –±—é–¥–∂–µ—Ç?"
    )
    kb = InlineKeyboardMarkup(
        inline_keyboard=[[
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",     callback_data="noop"),
            InlineKeyboardButton(text="üîô –û–±—Å—É–¥–∏—Ç—å –ø–æ–∑–∂–µ", callback_data="noop")
        ]]
    )

    await cb.message.edit_text(text, reply_markup=kb)
    await cb.answer()